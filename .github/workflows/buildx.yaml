name: Buildx & Push to DockerHub

on:
  workflow_dispatch:
#    inputs:
#      imagename:
#        description: 'Name of image'
#        required: true
#        default: 'rakheshster/stubby-unbound'
#      version:
#        description: 'Version'
#        required: true
#        default: 'v0.2.1'

jobs:
  buildx:
    runs-on: ubuntu-latest
    env: 
      # Variable format for workflow_dipatch https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/
      # IMAGENAME: ${{ github.event.inputs.imagename }}
      # VERSION: ${{ github.event.inputs.version }}
      PLATFORMS: "linux/amd64,linux/386,linux/arm/v7,linux/arm/v6"
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - id: read_buildinfo
        run: |
          content=`cat ./buildinfo.json`
          # the following lines are required for multi line json
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=packageJson::$content"
      
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Docker Buildx (build)
        run: |
          IMAGENAME="${{ fromJson(steps.read_buildinfo.outputs.packageJson).imagename }}"
          VERSION="${{ fromJson(steps.read_buildinfo.outputs.packageJson).version  }}"

          docker buildx build --platform $PLATFORMS --output "type=image,push=false" . --tag ${IMAGENAME}-${VERSION}

      - name: Login to Docker Hub
        if: success() && github.event_name != 'pull_request'
        uses: crazy-max/ghaction-docker-login@v1
        with:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD

      - name: Docker Buildx (push)
        if: success() && github.event_name != 'pull_request'
        run: |
          IMAGENAME="${{ fromJson(steps.read_buildinfo.outputs.packageJson).imagename }}"
          VERSION="${{ fromJson(steps.read_buildinfo.outputs.packageJson).version  }}"

          docker buildx build --platform $PLATFORMS --output "type=image,push=true" . --tag ${IMAGENAME}-${VERSION}

      - name: Inspect image
        if: always() && github.event_name != 'pull_request'
        run: |
          IMAGENAME="${{ fromJson(steps.read_buildinfo.outputs.packageJson).imagename }}"
          VERSION="${{ fromJson(steps.read_buildinfo.outputs.packageJson).version  }}"

          docker buildx imagetools inspect ${IMAGENAME}-${VERSION}
